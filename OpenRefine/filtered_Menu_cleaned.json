[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "place",
    "expression": "grel:value",
    "onError": "keep-original",
    "newColumnName": "place_cleaned",
    "columnInsertIndex": 6,
    "description": "Create column place_cleaned at index 6 based on column place using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "(DELMONICO'S.NEW YORK)",
                "l": "(DELMONICO'S.NEW YORK)"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, [NY]",
                "l": "DELMONICO'S, [NY]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, NY;",
                "l": "DELMONICO'S, NY;"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,( NEW YORK)",
                "l": "DELMONICO'S,( NEW YORK)"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,NY",
                "l": "DELMONICO'S,NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, NEW YORK, NY",
                "l": "DELMONICO'S, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, [NEW YORK, N.Y.]",
                "l": "DELMONICO'S, [NEW YORK, N.Y.]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S [NY]",
                "l": "DELMONICO'S [NY]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, NEW YORK",
                "l": "DELMONICO'S, NEW YORK"
              }
            },
            {
              "v": {
                "v": "DELMONICOS', NY",
                "l": "DELMONICOS', NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, N.Y.",
                "l": "DELMONICO'S, N.Y."
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, [NEW YORK,N.Y.]",
                "l": "DELMONICO'S, [NEW YORK,N.Y.]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S",
                "l": "DELMONICO'S"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S[NY]",
                "l": "DELMONICO'S[NY]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S  NY",
                "l": "DELMONICO'S  NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,[NEW YORK,NY?]",
                "l": "DELMONICO'S,[NEW YORK,NY?]"
              }
            },
            {
              "v": {
                "v": "DELMONICOS NY",
                "l": "DELMONICOS NY"
              }
            },
            {
              "v": {
                "v": "DELMOMICO'S,NY",
                "l": "DELMOMICO'S,NY"
              }
            },
            {
              "v": {
                "v": "DELMONICOS, [NEW YORK, N.Y.]",
                "l": "DELMONICOS, [NEW YORK, N.Y.]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, NEW YORK CITY",
                "l": "DELMONICO'S, NEW YORK CITY"
              }
            },
            {
              "v": {
                "v": "DELMONICOS, NEW YORK",
                "l": "DELMONICOS, NEW YORK"
              }
            },
            {
              "v": {
                "v": "DELMONICOS,[NEW YORK]",
                "l": "DELMONICOS,[NEW YORK]"
              }
            },
            {
              "v": {
                "v": "DELMONICOS, (NY)",
                "l": "DELMONICOS, (NY)"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S [NEW YORK]",
                "l": "DELMONICO'S [NEW YORK]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S NEW YOK CITY",
                "l": "DELMONICO'S NEW YOK CITY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S [NY?]",
                "l": "DELMONICO'S [NY?]"
              }
            },
            {
              "v": {
                "v": "[DELMONICO'S], NEW YORK, NY",
                "l": "[DELMONICO'S], NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "DELMONICOS, (NEW YORK, NY?)",
                "l": "DELMONICOS, (NEW YORK, NY?)"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S [NYC]",
                "l": "DELMONICO'S [NYC]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,[NEW YORK, N.Y.]",
                "l": "DELMONICO'S,[NEW YORK, N.Y.]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, [NEW YORK, NY]",
                "l": "DELMONICO'S, [NEW YORK, NY]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,[NEW YORK]",
                "l": "DELMONICO'S,[NEW YORK]"
              }
            },
            {
              "v": {
                "v": "[DELMONICO'S,NEW YORK NY]",
                "l": "[DELMONICO'S,NEW YORK NY]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S ",
                "l": "DELMONICO'S "
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,[NY]",
                "l": "DELMONICO'S,[NY]"
              }
            },
            {
              "v": {
                "v": "DELMONICOS, NEW YORK, NY",
                "l": "DELMONICOS, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S. NEW YORK, NY",
                "l": "DELMONICO'S. NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,NEW YORK,NY",
                "l": "DELMONICO'S,NEW YORK,NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, FIFTH AVENUE AND FORTY FORTH STREET, NEW YORK",
                "l": "DELMONICO'S, FIFTH AVENUE AND FORTY FORTH STREET, NEW YORK"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, (NEW YORK, NY?)",
                "l": "DELMONICO'S, (NEW YORK, NY?)"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S NY",
                "l": "DELMONICO'S NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, [NEW YORK, NY];",
                "l": "DELMONICO'S, [NEW YORK, NY];"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S NEW YORK,NY",
                "l": "DELMONICO'S NEW YORK,NY"
              }
            },
            {
              "v": {
                "v": "DELMONICOS,[NY]",
                "l": "DELMONICOS,[NY]"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S,(NY?)",
                "l": "DELMONICO'S,(NY?)"
              }
            },
            {
              "v": {
                "v": "Delmonicos",
                "l": "Delmonicos"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, NY",
                "l": "DELMONICO'S, NY"
              }
            },
            {
              "v": {
                "v": "DELMONICO'S, [NEW YORK]",
                "l": "DELMONICO'S, [NEW YORK]"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Waldorf-Astoria",
                "l": "Waldorf-Astoria"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA [NY?]",
                "l": "WALDORF-ASTORIA [NY?]"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA, THE, NEW YORK, NY",
                "l": "WALDORF-ASTORIA, THE, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA HOTEL, NEW YORK, NY",
                "l": "WALDORF ASTORIA HOTEL, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA HOTEL",
                "l": "WALDORF-ASTORIA HOTEL"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA,[NY]",
                "l": "WALDORF-ASTORIA,[NY]"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA, THE",
                "l": "WALDORF ASTORIA, THE"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA [NEW YORK]",
                "l": "WALDORF-ASTORIA [NEW YORK]"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA, NEW YORK, NY",
                "l": "WALDORF ASTORIA, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA,THE,[NEW YORK,NY?]",
                "l": "WALDORF-ASTORIA,THE,[NEW YORK,NY?]"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA, NY",
                "l": "WALDORF ASTORIA, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF- ASTORIA, NEW YORK",
                "l": "WALDORF- ASTORIA, NEW YORK"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA,NEW YORK,NY",
                "l": "WALDORF ASTORIA,NEW YORK,NY"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA,THE, NEW YORK, NY",
                "l": "WALDORF ASTORIA,THE, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA",
                "l": "WALDORF-ASTORIA"
              }
            },
            {
              "v": {
                "v": "WALDROF-ASTOIA, NEW YORK",
                "l": "WALDROF-ASTOIA, NEW YORK"
              }
            },
            {
              "v": {
                "v": "WALDORF ASTORIA, THE, [NY,NY]",
                "l": "WALDORF ASTORIA, THE, [NY,NY]"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA HOTEL, NEW YORK, NY",
                "l": "WALDORF-ASTORIA HOTEL, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA, NY",
                "l": "WALDORF-ASTORIA, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA,NY",
                "l": "WALDORF-ASTORIA,NY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA, [NEW YORK]",
                "l": "WALDORF-ASTORIA, [NEW YORK]"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA, NEW YORK, NY",
                "l": "WALDORF-ASTORIA, NEW YORK, NY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA, NEW YORK",
                "l": "WALDORF-ASTORIA, NEW YORK"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA, NEW YORK CITY",
                "l": "WALDORF-ASTORIA, NEW YORK CITY"
              }
            },
            {
              "v": {
                "v": "WALDORF-ASTORIA HOTEL, THE, NEW YORK, NY",
                "l": "WALDORF-ASTORIA HOTEL, THE, NEW YORK, NY"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NEW YORK, NY",
          "NEW YORK, [NY]",
          "[NEW YORK, NY]",
          "NEW YORK,NY",
          "[NEW YORK, NY?]",
          "(NEW YORK, NY?)",
          "(NEW YORK,NY)",
          "NEW YORK, [NY];",
          "[NEW YORK,NY]",
          "NEW YORK [NY]",
          "NEW YORK, NY [?]",
          "NEW YORK,[NY]",
          "[New York, NY]",
          "NEWBURGH, NY",
          "[NEW YORK, NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "GRAND HOTEL,LONDON, ENGLAND",
                "l": "GRAND HOTEL,LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,MELBOURNE",
                "l": "GRAND HOTEL,MELBOURNE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, LONDON, ENGLAND",
                "l": "GRAND HOTEL, LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]",
                "l": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)",
                "l": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI, OH",
                "l": "GRAND HOTEL, CINCINNATI, OH"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Baglioni",
                "l": "Grand Hotel Baglioni"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI [OH]",
                "l": "GRAND HOTEL, CINCINNATI [OH]"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Restaurant Central",
                "l": "Grand Hotel Restaurant Central"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH;",
                "l": "GRAND HOTEL, CINCINNATI OH;"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND",
                "l": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [S. PELLEGRINO?], ITALY",
                "l": "GRAND HOTEL, [S. PELLEGRINO?], ITALY"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARIS,FRANCE",
                "l": "GRAND HOTEL,PARIS,FRANCE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH",
                "l": "GRAND HOTEL, CINCINNATI OH"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [CINCINNATI, OH]",
                "l": "GRAND HOTEL, [CINCINNATI, OH]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL",
                "l": "GRAND HOTEL"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, THE, LONDON,[ENGLAND]",
                "l": "GRAND HOTEL, THE, LONDON,[ENGLAND]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE;",
                "l": "GRAND HOTEL, MELBOURNE;"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*CINCINNATI.*/,\"CINCINNATI, OH\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*CINCINNATI.*/,\"CINCINNATI, OH\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "GRAND HOTEL,LONDON, ENGLAND",
                "l": "GRAND HOTEL,LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,MELBOURNE",
                "l": "GRAND HOTEL,MELBOURNE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, LONDON, ENGLAND",
                "l": "GRAND HOTEL, LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]",
                "l": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)",
                "l": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Baglioni",
                "l": "Grand Hotel Baglioni"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Restaurant Central",
                "l": "Grand Hotel Restaurant Central"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND",
                "l": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [S. PELLEGRINO?], ITALY",
                "l": "GRAND HOTEL, [S. PELLEGRINO?], ITALY"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARIS,FRANCE",
                "l": "GRAND HOTEL,PARIS,FRANCE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL",
                "l": "GRAND HOTEL"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, THE, LONDON,[ENGLAND]",
                "l": "GRAND HOTEL, THE, LONDON,[ENGLAND]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE;",
                "l": "GRAND HOTEL, MELBOURNE;"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI, OH",
                "l": "GRAND HOTEL, CINCINNATI, OH"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI [OH]",
                "l": "GRAND HOTEL, CINCINNATI [OH]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH;",
                "l": "GRAND HOTEL, CINCINNATI OH;"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH",
                "l": "GRAND HOTEL, CINCINNATI OH"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [CINCINNATI, OH]",
                "l": "GRAND HOTEL, [CINCINNATI, OH]"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*LONDON.*/,\"LONDON, ENGLAND\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*LONDON.*/,\"LONDON, ENGLAND\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "GRAND HOTEL,MELBOURNE",
                "l": "GRAND HOTEL,MELBOURNE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]",
                "l": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)",
                "l": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Baglioni",
                "l": "Grand Hotel Baglioni"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Restaurant Central",
                "l": "Grand Hotel Restaurant Central"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [S. PELLEGRINO?], ITALY",
                "l": "GRAND HOTEL, [S. PELLEGRINO?], ITALY"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARIS,FRANCE",
                "l": "GRAND HOTEL,PARIS,FRANCE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL",
                "l": "GRAND HOTEL"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE;",
                "l": "GRAND HOTEL, MELBOURNE;"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,LONDON, ENGLAND",
                "l": "GRAND HOTEL,LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, LONDON, ENGLAND",
                "l": "GRAND HOTEL, LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND",
                "l": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, THE, LONDON,[ENGLAND]",
                "l": "GRAND HOTEL, THE, LONDON,[ENGLAND]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI, OH",
                "l": "GRAND HOTEL, CINCINNATI, OH"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI [OH]",
                "l": "GRAND HOTEL, CINCINNATI [OH]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH;",
                "l": "GRAND HOTEL, CINCINNATI OH;"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH",
                "l": "GRAND HOTEL, CINCINNATI OH"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [CINCINNATI, OH]",
                "l": "GRAND HOTEL, [CINCINNATI, OH]"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*PARIS.*/,\"PARIS, FRANCE\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*PARIS.*/,\"PARIS, FRANCE\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "GRAND HOTEL,MELBOURNE",
                "l": "GRAND HOTEL,MELBOURNE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)",
                "l": "GRAND HOTEL, MELBOURNE, (AUSTRALIA?)"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Baglioni",
                "l": "Grand Hotel Baglioni"
              }
            },
            {
              "v": {
                "v": "Grand Hotel Restaurant Central",
                "l": "Grand Hotel Restaurant Central"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [S. PELLEGRINO?], ITALY",
                "l": "GRAND HOTEL, [S. PELLEGRINO?], ITALY"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL",
                "l": "GRAND HOTEL"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, MELBOURNE;",
                "l": "GRAND HOTEL, MELBOURNE;"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]",
                "l": "GRAND HOTEL,PARISER HOF,FRANKFURT A.M.,[GERMANY]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,PARIS,FRANCE",
                "l": "GRAND HOTEL,PARIS,FRANCE"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,LONDON, ENGLAND",
                "l": "GRAND HOTEL,LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, LONDON, ENGLAND",
                "l": "GRAND HOTEL, LONDON, ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND",
                "l": "GRAND HOTEL,TRAFALGAR SQUARE,LONDON,ENGLAND"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, THE, LONDON,[ENGLAND]",
                "l": "GRAND HOTEL, THE, LONDON,[ENGLAND]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI, OH",
                "l": "GRAND HOTEL, CINCINNATI, OH"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI [OH]",
                "l": "GRAND HOTEL, CINCINNATI [OH]"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH;",
                "l": "GRAND HOTEL, CINCINNATI OH;"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, CINCINNATI OH",
                "l": "GRAND HOTEL, CINCINNATI OH"
              }
            },
            {
              "v": {
                "v": "GRAND HOTEL, [CINCINNATI, OH]",
                "l": "GRAND HOTEL, [CINCINNATI, OH]"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*MELBOURNE.*/,\"MELBOURNE, AUSTRALIA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*MELBOURNE.*/,\"MELBOURNE, AUSTRALIA\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NEW YORK, NYNEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "MANHATTAN BEACH, LONG ISLAND [NY]",
                "l": "MANHATTAN BEACH, LONG ISLAND [NY]"
              }
            },
            {
              "v": {
                "v": "MANHATTAN BEACH, L.I. NY",
                "l": "MANHATTAN BEACH, L.I. NY"
              }
            },
            {
              "v": {
                "v": "MANHATTAN BEACH, LONG ISLAND, [NY]",
                "l": "MANHATTAN BEACH, LONG ISLAND, [NY]"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "MANHATTAN BEACH",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*/,\"LONG ISLAND, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*/,\"LONG ISLAND, NY\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "USMS ST LOUIS",
                "l": "USMS ST LOUIS"
              }
            },
            {
              "v": {
                "v": "ST.NICHOLAS HOTEL,ST. LOUIS,MO;",
                "l": "ST.NICHOLAS HOTEL,ST. LOUIS,MO;"
              }
            },
            {
              "v": {
                "v": "SOUTHERN,THE,ST.LOUIS,MO",
                "l": "SOUTHERN,THE,ST.LOUIS,MO"
              }
            },
            {
              "v": {
                "v": "MERCANTILE CLUB, ST LOUIS [MO]",
                "l": "MERCANTILE CLUB, ST LOUIS [MO]"
              }
            },
            {
              "v": {
                "v": "SOUTHERN HOTEL,[ST.LOUIS,MO]",
                "l": "SOUTHERN HOTEL,[ST.LOUIS,MO]"
              }
            },
            {
              "v": {
                "v": "CHEMICAL BUILDING, 8TH AND OLIVE, ST. LOUIS, MO",
                "l": "CHEMICAL BUILDING, 8TH AND OLIVE, ST. LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "[ST.LOUIS,MO?]",
                "l": "[ST.LOUIS,MO?]"
              }
            },
            {
              "v": {
                "v": "SOUTHERN HOTEL,ST.LOUIS",
                "l": "SOUTHERN HOTEL,ST.LOUIS"
              }
            },
            {
              "v": {
                "v": "PLANTERS HOTEL, ST.LOUIS,MO",
                "l": "PLANTERS HOTEL, ST.LOUIS,MO"
              }
            },
            {
              "v": {
                "v": "SOUTHERN HOTEL, [ST. LOUIS, MO]",
                "l": "SOUTHERN HOTEL, [ST. LOUIS, MO]"
              }
            },
            {
              "v": {
                "v": "JEFFERSON HOTEL, SAINT LOUIS, MO",
                "l": "JEFFERSON HOTEL, SAINT LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "JEFFERSON HOTEL, ST.  LOUIS [MO]",
                "l": "JEFFERSON HOTEL, ST.  LOUIS [MO]"
              }
            },
            {
              "v": {
                "v": "HOTEL JEFFERSON, ST. LOUIS, MO",
                "l": "HOTEL JEFFERSON, ST. LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "ST. LOUIS CLUB, [?ST. LOUIS, MO?]",
                "l": "ST. LOUIS CLUB, [?ST. LOUIS, MO?]"
              }
            },
            {
              "v": {
                "v": "ST.LOUIS CLUB, ST.LOUIS,MO.",
                "l": "ST.LOUIS CLUB, ST.LOUIS,MO."
              }
            },
            {
              "v": {
                "v": "ST LOUIS,MO",
                "l": "ST LOUIS,MO"
              }
            },
            {
              "v": {
                "v": "ST. NICHOLAS HOTEL, ST.LOUIS, MO",
                "l": "ST. NICHOLAS HOTEL, ST.LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "ST LOUIS, MO",
                "l": "ST LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "ST.LOUIS CLUB,(ST.LOUIS,MISSOURI)",
                "l": "ST.LOUIS CLUB,(ST.LOUIS,MISSOURI)"
              }
            },
            {
              "v": {
                "v": "SOUTHERN HOTEL, ST. LOUIS, MO",
                "l": "SOUTHERN HOTEL, ST. LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "SOUTHERN HOTEL,ST. LOUIS,MO.",
                "l": "SOUTHERN HOTEL,ST. LOUIS,MO."
              }
            },
            {
              "v": {
                "v": "PLANTERS HOTEL, ST. LOUIS, [MO]",
                "l": "PLANTERS HOTEL, ST. LOUIS, [MO]"
              }
            },
            {
              "v": {
                "v": "PLANTERS HOTEL, ST. LOUIS,[MO]",
                "l": "PLANTERS HOTEL, ST. LOUIS,[MO]"
              }
            },
            {
              "v": {
                "v": "ST. LOUIS, [MO] MENU SAYS U.S.A.",
                "l": "ST. LOUIS, [MO] MENU SAYS U.S.A."
              }
            },
            {
              "v": {
                "v": "MERCANTILE CLUB HOUSE, ST. LOUIS MO",
                "l": "MERCANTILE CLUB HOUSE, ST. LOUIS MO"
              }
            },
            {
              "v": {
                "v": "PLANTERS HOTEL, (ST.LOUIS, MO?)",
                "l": "PLANTERS HOTEL, (ST.LOUIS, MO?)"
              }
            },
            {
              "v": {
                "v": "ST. LOUIS [MO]",
                "l": "ST. LOUIS [MO]"
              }
            },
            {
              "v": {
                "v": "KINGS HIGHWAY AND WASHINGTON BOULEVARD, ST. LOUIS [MO]",
                "l": "KINGS HIGHWAY AND WASHINGTON BOULEVARD, ST. LOUIS [MO]"
              }
            },
            {
              "v": {
                "v": "MERCANTILE CLUB (ST. LOUIS)",
                "l": "MERCANTILE CLUB (ST. LOUIS)"
              }
            },
            {
              "v": {
                "v": "MERCANTILE CLUB,ST.LOUIS, [MISSOURI]",
                "l": "MERCANTILE CLUB,ST.LOUIS, [MISSOURI]"
              }
            },
            {
              "v": {
                "v": "MERCANTILE CLUB, ST. LOUIS, MO",
                "l": "MERCANTILE CLUB, ST. LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "ST. LOUIS, [MO];",
                "l": "ST. LOUIS, [MO];"
              }
            },
            {
              "v": {
                "v": "SAINT LOUIS, MO",
                "l": "SAINT LOUIS, MO"
              }
            },
            {
              "v": {
                "v": "[ST.LOUIS, MO]",
                "l": "[ST.LOUIS, MO]"
              }
            },
            {
              "v": {
                "v": "MERCANTILE CLUB, ST.LOUIS MO",
                "l": "MERCANTILE CLUB, ST.LOUIS MO"
              }
            },
            {
              "v": {
                "v": "COMSERVATORY PALACE HOTEL,[ST. LOUIS,MO.]",
                "l": "COMSERVATORY PALACE HOTEL,[ST. LOUIS,MO.]"
              }
            },
            {
              "v": {
                "v": "MERCANTILE CLUB (ST LOUIS, MO)",
                "l": "MERCANTILE CLUB (ST LOUIS, MO)"
              }
            },
            {
              "v": {
                "v": "ST. LOUIS, MO",
                "l": "ST. LOUIS, MO"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "LOUIS",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*/,\"ST LOUIS, MO\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*/,\"ST LOUIS, MO\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "LOUISVILLE",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*/,\"LOUISVILLE, KY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*/,\"LOUISVILLE, KY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "LOUISVILLE",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "LOUISVILLE, KYLOUISVILLE, KY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOUISVILLE, KY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BOSTON",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*BOSTON,.*/,\"BOSTON, MA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*BOSTON,.*/,\"BOSTON, MA\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BOSTON",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "BOSTON MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON, MA"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BOSTON",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*BOSTON.*MA.*/,\"BOSTON, MA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*BOSTON.*MA.*/,\"BOSTON, MA\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BOSTON",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "YOUNG'S HOTEL,BOSTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON, MA"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "PHIL",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*PHILADELPHIA.*PA.*/,\"PHILADELPHIA, PA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*PHILADELPHIA.*PA.*/,\"PHILADELPHIA, PA\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "PHIL",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "HOTEL BELLEVUE, [PHILADEPHIA, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PHILADEPHIA, PA"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "CHIC",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*CHICAGO.*IL.*/,\"CHICAGO, IL\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*CHICAGO.*IL.*/,\"CHICAGO, IL\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "CHIC",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "AUDITORIUM HOEL, CHICAO, IL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO, IL"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*ENROUTE.*/,\"ENROUTE\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*ENROUTE.*/,\"ENROUTE\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*EN ROUTE.*/,\"ENROUTE\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*EN ROUTE.*/,\"ENROUTE\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "DC",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*DC.*/,\"WASHINGTON, DC\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*DC.*/,\"WASHINGTON, DC\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "ST LOUIS, MOST LOUIS, MO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST LOUIS, MO"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BISCAYNE",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/.*BISCAYNE.*/,\"MIAMI BAY BISCAYNE, FL\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/.*BISCAYNE.*/,\"MIAMI BAY BISCAYNE, FL\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "ORLEANS",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*ORLEANS.*/,\"NEW ORLEANS, LA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*ORLEANS.*/,\"NEW ORLEANS, LA\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "AUGUSTINE",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*AUGUSTINE.*/,\"ST AUGUSTINE, FL\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*AUGUSTINE.*/,\"ST AUGUSTINE, FL\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "MILWAUKEE",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/.*MILWAUKEE.*WI.*/,\"MILWAUKEE, WI\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/.*MILWAUKEE.*WI.*/,\"MILWAUKEE, WI\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "FRANCISCO",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*FRANCISCO.*CA.*/,\"SAN FRANCISCO, CA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*FRANCISCO.*CA.*/,\"SAN FRANCISCO, CA\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BUFFALO",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*BUFFALO.*NY.*/,\"BUFFALO, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*BUFFALO.*NY.*/,\"BUFFALO, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BUFFALO",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "HOTEL IROQUOIS,(BUFFALO,N.Y.)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUFFALO, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "SARATOGA",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*SARATOGA.*NY.*/,\"SARATOGA SPRINGS, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*SARATOGA.*NY.*/,\"SARATOGA SPRINGS, NY\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "PIER",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(\".*PIER.*R.*I.*\",\"NARRAGANSETT PIER, RI\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(\".*PIER.*R.*I.*\",\"NARRAGANSETT PIER, RI\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "PIER",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*PIER.*R\\.?I.*/,\"NARRAGANSETT PIER, RI\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*PIER.*R\\.?I.*/,\"NARRAGANSETT PIER, RI\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "CLEVELAND",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*CLEVELAND.*OH.*/,\"CLEVELAND, OH\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*CLEVELAND.*OH.*/,\"CLEVELAND, OH\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "BROOKLYN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*BROOKLYN.*N(EW )?Y.*/,\"BROOKLYN, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*BROOKLYN.*N(EW )?Y.*/,\"BROOKLYN, NY\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "ATLANTIC",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*ATLANTIC CITY.*/,\"ATLANTIC CITY, NJ\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*ATLANTIC CITY.*/,\"ATLANTIC CITY, NJ\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "PALM",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "PALM BEACH,FLA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALM BEACH, FL"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "LONG BEACH",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*LONG BEACH.*NY.*/,\"LONG ISLAND, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*LONG BEACH.*NY.*/,\"LONG ISLAND, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "LONG ",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "LONG ISLAND, NYLONG ISLAND, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LONG ISLAND, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "CORONAD",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(\"CORONADA\",\"CORONADO\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(\"CORONADA\",\"CORONADO\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "CORONAD",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*CORONADO BEACH.*/,\"CORONADO BEACH, CA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*CORONADO BEACH.*/,\"CORONADO BEACH, CA\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "ALTOONA",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*ALTOONA.*/,\"ALTOONA, PA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*ALTOONA.*/,\"ALTOONA, PA\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "DETROIT",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*DETROIT.*/,\"DETROIT, MI\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*DETROIT.*/,\"DETROIT, MI\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*DINING CAR.*/i,\"RAILROAD\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*DINING CAR.*/i,\"RAILROAD\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "MOUNTAINS",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "WHITE MOUNTAINS,N.H."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WHITE MOUNTAINS, NH"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/[\\[\\]\\.\\?]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/[\\[\\]\\.\\?]/,\"\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "PHILADEPHIA, PA",
                "l": "PHILADEPHIA, PA"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "phila",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "PHILADEPHIA, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PHILADELPHIA, PA"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "new york, ?NY",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "new york, ?NY",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NEW YORK, NYNEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "tampa",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"TAMPA, FL\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"TAMPA, FL\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "st louis",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "ABOARD USMSST LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD USMS ST LOUIS"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "atlanta",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"ATLANTA, GA\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"ATLANTA, GA\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "atlantic",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "ATLANTIC HOTEL, OCEAN CITY, MD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEAN CITY, MD"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "newport",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.*NEWPORT.*RI.*/,\"NEWPORT, RI\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.*NEWPORT.*RI.*/,\"NEWPORT, RI\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "jacksonville",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"JACKSONVILLE, FL\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"JACKSONVILLE, FL\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "COLORADO",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "PUEBLO,COLORADO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PUEBLO, CO"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "COLORADO",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"COLORADO SPRINGS, CO\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"COLORADO SPRINGS, CO\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "WHEELING",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "FORT HENRY CLUB, WHEELING, WV"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WHEELING, WV"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "ALBANY",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"ALBANY, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"ALBANY, NY\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "NEW YORK",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "HARTFORD",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"HARTFORD, CT\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"HARTFORD, CT\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "NEW HAVEN",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW HAVEN, CT\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW HAVEN, CT\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Southern Pacific"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RAILROAD"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "venue",
          "columnName": "venue",
          "query": "RAILROA",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"RAILROAD\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"RAILROAD\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "venue",
          "columnName": "venue",
          "query": "RAILROA",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [],
        "fromBlank": true,
        "fromError": false,
        "to": "RAILROAD"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "GRAMERCY",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Park Lane"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "NYC",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "NEWARK",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "8 CENTRAL AVENUE, NEWARK, NJ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEWARK, NJ"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NEW YOK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "STREET.*NY",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "NY",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "SYRACUSE NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SYRACUSE, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "ST.*NY",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "NTEMPY",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "STATEN ISLAND, NTEMPY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "STATEN ISLAND, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "AVE.*NY",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "NY",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "BATH BEACH, BKLYN,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROOKLYN, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "B.*WA.*NY",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NIAGARA TO THE SEA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNKNOWN"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "JC's",
                "l": "JC's"
              }
            },
            {
              "v": {
                "v": "Canlis'",
                "l": "Canlis'"
              }
            },
            {
              "v": {
                "v": "Grandview Gardens",
                "l": "Grandview Gardens"
              }
            },
            {
              "v": {
                "v": "ELECTRIC TOWER RESTAURANT,PAN AMERICAN EXPOSITION",
                "l": "ELECTRIC TOWER RESTAURANT,PAN AMERICAN EXPOSITION"
              }
            },
            {
              "v": {
                "v": "Aurora",
                "l": "Aurora"
              }
            },
            {
              "v": {
                "v": "Unknown",
                "l": "Unknown"
              }
            },
            {
              "v": {
                "v": "Girafe",
                "l": "Girafe"
              }
            },
            {
              "v": {
                "v": "Emily Shaw's Inn",
                "l": "Emily Shaw's Inn"
              }
            },
            {
              "v": {
                "v": "Blue Onion Drive-In Restaurants",
                "l": "Blue Onion Drive-In Restaurants"
              }
            },
            {
              "v": {
                "v": "Alfredo; Citicorp Center, 53rd Street and Lexington Avenue",
                "l": "Alfredo; Citicorp Center, 53rd Street and Lexington Avenue"
              }
            },
            {
              "v": {
                "v": "FRANCONIA NOTCH NH",
                "l": "FRANCONIA NOTCH NH"
              }
            },
            {
              "v": {
                "v": "Forbidden City",
                "l": "Forbidden City"
              }
            },
            {
              "v": {
                "v": "FIFTH AVENUE & FIFTY-NINTH STREET;",
                "l": "FIFTH AVENUE & FIFTY-NINTH STREET;"
              }
            },
            {
              "v": {
                "v": "DAMPFER \"KRONPRINZ WILHLEM\"",
                "l": "DAMPFER \"KRONPRINZ WILHLEM\""
              }
            },
            {
              "v": {
                "v": "I Tre Merli Bistro; 725 Fifth Avenue",
                "l": "I Tre Merli Bistro; 725 Fifth Avenue"
              }
            },
            {
              "v": {
                "v": "Bellini",
                "l": "Bellini"
              }
            },
            {
              "v": {
                "v": "Balthazar",
                "l": "Balthazar"
              }
            },
            {
              "v": {
                "v": "Chemists' Club",
                "l": "Chemists' Club"
              }
            },
            {
              "v": {
                "v": "Hotel del Coronado",
                "l": "Hotel del Coronado"
              }
            },
            {
              "v": {
                "v": "Kay Kay Garden",
                "l": "Kay Kay Garden"
              }
            },
            {
              "v": {
                "v": "Akbar",
                "l": "Akbar"
              }
            },
            {
              "v": {
                "v": "BACIOCHIE",
                "l": "BACIOCHIE"
              }
            },
            {
              "v": {
                "v": "178 & 180 MADISON ST",
                "l": "178 & 180 MADISON ST"
              }
            },
            {
              "v": {
                "v": "CAR ASTORIA",
                "l": "CAR ASTORIA"
              }
            },
            {
              "v": {
                "v": "Claude's",
                "l": "Claude's"
              }
            },
            {
              "v": {
                "v": "India House",
                "l": "India House"
              }
            },
            {
              "v": {
                "v": "CP",
                "l": "CP"
              }
            },
            {
              "v": {
                "v": "60 West 55th Street",
                "l": "60 West 55th Street"
              }
            },
            {
              "v": {
                "v": "The Gate of Cleve; Sheraton-Atlantic Hotel",
                "l": "The Gate of Cleve; Sheraton-Atlantic Hotel"
              }
            },
            {
              "v": {
                "v": "BROADWAY AND 63RD ATREET",
                "l": "BROADWAY AND 63RD ATREET"
              }
            },
            {
              "v": {
                "v": "Green Mill",
                "l": "Green Mill"
              }
            },
            {
              "v": {
                "v": "Le Perigord; 405 East 52nd Street",
                "l": "Le Perigord; 405 East 52nd Street"
              }
            },
            {
              "v": {
                "v": "Coffee House of the Statler Hilton",
                "l": "Coffee House of the Statler Hilton"
              }
            },
            {
              "v": {
                "v": "Christer's",
                "l": "Christer's"
              }
            },
            {
              "v": {
                "v": "6TH AVENUE AND 18TH STREET",
                "l": "6TH AVENUE AND 18TH STREET"
              }
            },
            {
              "v": {
                "v": "CLUB DINING ROOM",
                "l": "CLUB DINING ROOM"
              }
            },
            {
              "v": {
                "v": "BEAVER ST ",
                "l": "BEAVER ST "
              }
            },
            {
              "v": {
                "v": "Edwardian Room",
                "l": "Edwardian Room"
              }
            },
            {
              "v": {
                "v": "Gosman's Dock",
                "l": "Gosman's Dock"
              }
            },
            {
              "v": {
                "v": "Anthony's Fish Grottos",
                "l": "Anthony's Fish Grottos"
              }
            },
            {
              "v": {
                "v": "663-665 BROADWAY",
                "l": "663-665 BROADWAY"
              }
            },
            {
              "v": {
                "v": "Cafe del Sol",
                "l": "Cafe del Sol"
              }
            },
            {
              "v": {
                "v": "15 AND 17 WEST HOUSTON STREET",
                "l": "15 AND 17 WEST HOUSTON STREET"
              }
            },
            {
              "v": {
                "v": "General Mess",
                "l": "General Mess"
              }
            },
            {
              "v": {
                "v": "Charlie Brown's",
                "l": "Charlie Brown's"
              }
            },
            {
              "v": {
                "v": "Engine House No 5",
                "l": "Engine House No 5"
              }
            },
            {
              "v": {
                "v": "Caesar's",
                "l": "Caesar's"
              }
            },
            {
              "v": {
                "v": "Cafe Carlyle",
                "l": "Cafe Carlyle"
              }
            },
            {
              "v": {
                "v": "Alexis",
                "l": "Alexis"
              }
            },
            {
              "v": {
                "v": "Karl Ratzsch's",
                "l": "Karl Ratzsch's"
              }
            },
            {
              "v": {
                "v": "2351 3RD AVE NEAR 128TH ST",
                "l": "2351 3RD AVE NEAR 128TH ST"
              }
            },
            {
              "v": {
                "v": "METROPOLITAN OPERA HOUSE",
                "l": "METROPOLITAN OPERA HOUSE"
              }
            },
            {
              "v": {
                "v": "Blum's ",
                "l": "Blum's "
              }
            },
            {
              "v": {
                "v": "Charley Brown's",
                "l": "Charley Brown's"
              }
            },
            {
              "v": {
                "v": "Dish of Salt",
                "l": "Dish of Salt"
              }
            },
            {
              "v": {
                "v": "ChinChin",
                "l": "ChinChin"
              }
            },
            {
              "v": {
                "v": "Bull and Bear",
                "l": "Bull and Bear"
              }
            },
            {
              "v": {
                "v": "Cafe Promenade",
                "l": "Cafe Promenade"
              }
            },
            {
              "v": {
                "v": "Le Bernardin",
                "l": "Le Bernardin"
              }
            },
            {
              "v": {
                "v": "Agora",
                "l": "Agora"
              }
            },
            {
              "v": {
                "v": "The Plaza; Hilton Hotels",
                "l": "The Plaza; Hilton Hotels"
              }
            },
            {
              "v": {
                "v": "Indo Chine",
                "l": "Indo Chine"
              }
            },
            {
              "v": {
                "v": "414 West 42nd Street",
                "l": "414 West 42nd Street"
              }
            },
            {
              "v": {
                "v": "Library Room",
                "l": "Library Room"
              }
            },
            {
              "v": {
                "v": "CAFE & REST;",
                "l": "CAFE & REST;"
              }
            },
            {
              "v": {
                "v": "Brussels Restaurant",
                "l": "Brussels Restaurant"
              }
            },
            {
              "v": {
                "v": "102 MADISON ST ",
                "l": "102 MADISON ST "
              }
            },
            {
              "v": {
                "v": "Jacqueline Cafe & Bistro; 101 West Fayette Street",
                "l": "Jacqueline Cafe & Bistro; 101 West Fayette Street"
              }
            },
            {
              "v": {
                "v": "Hampshire House",
                "l": "Hampshire House"
              }
            },
            {
              "v": {
                "v": "unknown",
                "l": "unknown"
              }
            },
            {
              "v": {
                "v": "Fiorello's",
                "l": "Fiorello's"
              }
            },
            {
              "v": {
                "v": "Hana-Bishi",
                "l": "Hana-Bishi"
              }
            },
            {
              "v": {
                "v": "Hotel St Francis",
                "l": "Hotel St Francis"
              }
            },
            {
              "v": {
                "v": "ART ROOMS OF THE ACADEMY OF MUSIC",
                "l": "ART ROOMS OF THE ACADEMY OF MUSIC"
              }
            },
            {
              "v": {
                "v": "20 ANN STREET, 149 FULTON ST, 454 SIXTH AVENUE",
                "l": "20 ANN STREET, 149 FULTON ST, 454 SIXTH AVENUE"
              }
            },
            {
              "v": {
                "v": "Alfredo",
                "l": "Alfredo"
              }
            },
            {
              "v": {
                "v": "RMSROTTERDAM",
                "l": "RMSROTTERDAM"
              }
            },
            {
              "v": {
                "v": "Aladdin Studio Tiffin Room",
                "l": "Aladdin Studio Tiffin Room"
              }
            },
            {
              "v": {
                "v": "Fleet Street; 729 Third Avenue",
                "l": "Fleet Street; 729 Third Avenue"
              }
            },
            {
              "v": {
                "v": "Cavanagh's",
                "l": "Cavanagh's"
              }
            },
            {
              "v": {
                "v": "Anthony's Pier 4; 140 Northern Avenue",
                "l": "Anthony's Pier 4; 140 Northern Avenue"
              }
            },
            {
              "v": {
                "v": "66TH STREET AND BR6ADWAY",
                "l": "66TH STREET AND BR6ADWAY"
              }
            },
            {
              "v": {
                "v": "George's Restaurant",
                "l": "George's Restaurant"
              }
            },
            {
              "v": {
                "v": "Ghirardelli Soda Fountain & Candy Shop",
                "l": "Ghirardelli Soda Fountain & Candy Shop"
              }
            },
            {
              "v": {
                "v": "Cafe Chauveron",
                "l": "Cafe Chauveron"
              }
            },
            {
              "v": {
                "v": "Algonquin Hotel",
                "l": "Algonquin Hotel"
              }
            },
            {
              "v": {
                "v": "Jumer's",
                "l": "Jumer's"
              }
            },
            {
              "v": {
                "v": "Applebys",
                "l": "Applebys"
              }
            },
            {
              "v": {
                "v": "Don the Beachcomber",
                "l": "Don the Beachcomber"
              }
            },
            {
              "v": {
                "v": "Estiatorio Milos",
                "l": "Estiatorio Milos"
              }
            },
            {
              "v": {
                "v": "Candlelight Restaurant; 114 Henry Street",
                "l": "Candlelight Restaurant; 114 Henry Street"
              }
            },
            {
              "v": {
                "v": "Cathay House",
                "l": "Cathay House"
              }
            },
            {
              "v": {
                "v": "Hong Chong Burlingame Chop Suey Restaurant",
                "l": "Hong Chong Burlingame Chop Suey Restaurant"
              }
            },
            {
              "v": {
                "v": "21 ANN STREET",
                "l": "21 ANN STREET"
              }
            },
            {
              "v": {
                "v": "Cafe at the Seelbach",
                "l": "Cafe at the Seelbach"
              }
            },
            {
              "v": {
                "v": "HARBIN INN UNKNOWN",
                "l": "HARBIN INN UNKNOWN"
              }
            },
            {
              "v": {
                "v": "Le Cirque",
                "l": "Le Cirque"
              }
            },
            {
              "v": {
                "v": "102 EAST MADISON ST",
                "l": "102 EAST MADISON ST"
              }
            },
            {
              "v": {
                "v": "Chanterelle",
                "l": "Chanterelle"
              }
            },
            {
              "v": {
                "v": "Quo Vadis Restaurant; 26 East 63rd Street",
                "l": "Quo Vadis Restaurant; 26 East 63rd Street"
              }
            },
            {
              "v": {
                "v": "Aureole",
                "l": "Aureole"
              }
            },
            {
              "v": {
                "v": "Chew's Cafe",
                "l": "Chew's Cafe"
              }
            },
            {
              "v": {
                "v": "Inagiku; 111 East 49th Street",
                "l": "Inagiku; 111 East 49th Street"
              }
            },
            {
              "v": {
                "v": "BOULEVARD, 66TH AND 67TH STREETS",
                "l": "BOULEVARD, 66TH AND 67TH STREETS"
              }
            },
            {
              "v": {
                "v": "METROPOLITAN HOTEL",
                "l": "METROPOLITAN HOTEL"
              }
            },
            {
              "v": {
                "v": "HOTEL LASSARE, ROSEBANK, SI,NY",
                "l": "HOTEL LASSARE, ROSEBANK, SI,NY"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"UNKNOWN\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"UNKNOWN\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "COLUMBUS,OHIO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLUMBUS, OH"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "[a-z]",
          "mode": "regex",
          "caseSensitive": true,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"UNKNOWN\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"UNKNOWN\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "LAS VEGAR, HOT SPRINGS, NM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOT SPRINGS, NM"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "STEAMSHIP \"CITY OF PARA\"",
                "l": "STEAMSHIP \"CITY OF PARA\""
              }
            },
            {
              "v": {
                "v": "TADOUSAC",
                "l": "TADOUSAC"
              }
            },
            {
              "v": {
                "v": "PABST BLUE RIBBON",
                "l": "PABST BLUE RIBBON"
              }
            },
            {
              "v": {
                "v": "SS SONOMA",
                "l": "SS SONOMA"
              }
            },
            {
              "v": {
                "v": "STEAMER \"REPUBLIC\"",
                "l": "STEAMER \"REPUBLIC\""
              }
            },
            {
              "v": {
                "v": "METOPOLITAN HOTEL",
                "l": "METOPOLITAN HOTEL"
              }
            },
            {
              "v": {
                "v": "SS \"COPTIC\"",
                "l": "SS \"COPTIC\""
              }
            },
            {
              "v": {
                "v": "STEAMER PRISCILLA",
                "l": "STEAMER PRISCILLA"
              }
            },
            {
              "v": {
                "v": "STEAMER SARATOGA,TROY LINE",
                "l": "STEAMER SARATOGA,TROY LINE"
              }
            },
            {
              "v": {
                "v": "STEAMER PURITAN",
                "l": "STEAMER PURITAN"
              }
            },
            {
              "v": {
                "v": "SS \"FRIEDRICH DER GROSSE\"",
                "l": "SS \"FRIEDRICH DER GROSSE\""
              }
            },
            {
              "v": {
                "v": "RMS \" CAMPANIA\"",
                "l": "RMS \" CAMPANIA\""
              }
            },
            {
              "v": {
                "v": "RMS-ROTTERDAM",
                "l": "RMS-ROTTERDAM"
              }
            },
            {
              "v": {
                "v": "STEAMSHIP IROQUOIS",
                "l": "STEAMSHIP IROQUOIS"
              }
            },
            {
              "v": {
                "v": "STEAMER \"CEPHEUS\"",
                "l": "STEAMER \"CEPHEUS\""
              }
            },
            {
              "v": {
                "v": "WASHINGTON PARK ON THE DELAWARE",
                "l": "WASHINGTON PARK ON THE DELAWARE"
              }
            },
            {
              "v": {
                "v": "PAN MERICAN EXPOSITION",
                "l": "PAN MERICAN EXPOSITION"
              }
            },
            {
              "v": {
                "v": "STEAMER MAINE",
                "l": "STEAMER MAINE"
              }
            },
            {
              "v": {
                "v": "SS WESTERNLAND",
                "l": "SS WESTERNLAND"
              }
            },
            {
              "v": {
                "v": "PAN-AMERICAN EXPOSITION",
                "l": "PAN-AMERICAN EXPOSITION"
              }
            },
            {
              "v": {
                "v": "MAZZETI PHILA",
                "l": "MAZZETI PHILA"
              }
            },
            {
              "v": {
                "v": "STEAMER ALBERTINA",
                "l": "STEAMER ALBERTINA"
              }
            },
            {
              "v": {
                "v": "RMS LUCANIA",
                "l": "RMS LUCANIA"
              }
            },
            {
              "v": {
                "v": "SS DORIC",
                "l": "SS DORIC"
              }
            },
            {
              "v": {
                "v": "STEAMSHIP NORTHWEST",
                "l": "STEAMSHIP NORTHWEST"
              }
            },
            {
              "v": {
                "v": "RMS CAMPANIA",
                "l": "RMS CAMPANIA"
              }
            },
            {
              "v": {
                "v": "SIXTY-SIXTH STREET & BROADWAY",
                "l": "SIXTY-SIXTH STREET & BROADWAY"
              }
            },
            {
              "v": {
                "v": "SS SOUTHWORK",
                "l": "SS SOUTHWORK"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"UNKNOWN\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"UNKNOWN\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "QUEBEC, CANADA",
                "l": "QUEBEC, CANADA"
              }
            },
            {
              "v": {
                "v": "TORONTO,ONT,CANADA",
                "l": "TORONTO,ONT,CANADA"
              }
            },
            {
              "v": {
                "v": "TORONTO, CANADA",
                "l": "TORONTO, CANADA"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.replace(\"Dollars\",\"Canadian Dollars\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.replace(\"Dollars\",\"Canadian Dollars\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value",
    "edits": [
      {
        "from": [
          "SAVARIN'S CAFE,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      }
    ],
    "description": "Mass edit cells in column place_cleaned"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "place_cleaned",
          "columnName": "place_cleaned",
          "query": "park row",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"NEW YORK, NY\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"NEW YORK, NY\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "place_cleaned",
          "expression": "value",
          "columnName": "place_cleaned",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "STEAMER RHODE ISLAND",
                "l": "STEAMER RHODE ISLAND"
              }
            },
            {
              "v": {
                "v": "STEAMER PILGRIM",
                "l": "STEAMER PILGRIM"
              }
            },
            {
              "v": {
                "v": "STEAMER PLYMOUTH",
                "l": "STEAMER PLYMOUTH"
              }
            },
            {
              "v": {
                "v": "RMS ROTTERDAM",
                "l": "RMS ROTTERDAM"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "currency",
          "columnName": "currency",
          "query": "^Dollars$",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "place_cleaned",
    "expression": "value.replace(/.+/,\"UNKNOWN\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place_cleaned using expression value.replace(/.+/,\"UNKNOWN\")"
  }
]